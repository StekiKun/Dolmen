package org.stekikun.dolmen.test.examples;
import org.stekikun.dolmen.test.examples.StraightLineParser.Token;
import static org.stekikun.dolmen.test.examples.StraightLineParser.Token.*;

/**
 * Lexer generated by Dolmen 1.0.0
 */
public final class StraightLineLexer extends org.stekikun.dolmen.codegen.LexBuffer {
    
     
    
    /**
     * Returns a fresh lexer based on the given character stream
     * @param inputname
     * @param reader
     */
    public StraightLineLexer(String inputname, java.io.Reader reader) {
        super(inputname, reader);
    }
    
    /**
     * Entry point for rule main
     */
    public Token main() {
        main:
        while (true) {
            // Initialize lexer for this automaton
            startToken();
            int result = _jl_cell0();
            endToken();
            switch (result) {
            case 0:  {
                 return main(); 
            }
            case 1:  {
                 return INT(Integer.parseInt(getLexeme())); 
            }
            case 2:  {
                 return PRINT; 
            }
            case 3:  {
                 return ID(getLexeme()); 
            }
            case 4:  {
                 return PLUS; 
            }
            case 5:  {
                 return TIMES; 
            }
            case 6:  {
                 return MINUS; 
            }
            case 7:  {
                 return DIV; 
            }
            case 8:  {
                 return COMMA; 
            }
            case 9:  {
                 return LPAREN; 
            }
            case 10:  {
                 return RPAREN; 
            }
            case 11:  {
                 return ASSIGN; 
            }
            case 12:  {
                 return SEMICOLON; 
            }
            case 13:  {
                 return EOF; 
            }
            default:
                break main;
            }
        }
        throw error("Empty token");
    }
    
    private int _jl_cell0() {
        final char _jl_char = getNextChar();
        if (_jl_char <= 46) {
            switch (_jl_char) {
            // [0x0008-0x000a 0x000d 0x0020]
            case 8:
            case 9:
            case 10:
            case 13:
            case 32: {
                return _jl_cell14();
            }
            // (
            case 40: {
                return _jl_cell5();
            }
            // )
            case 41: {
                return _jl_cell4();
            }
            // *
            case 42: {
                return _jl_cell9();
            }
            // +
            case 43: {
                return _jl_cell10();
            }
            // ,
            case 44: {
                return _jl_cell6();
            }
            // \-
            case 45: {
                return _jl_cell8();
            }
            default:  {
                return rewind();
            }
            }
        } else  {
            if (_jl_char <= 94) {
                if (_jl_char <= 58) {
                    switch (_jl_char) {
                    // /
                    case 47: {
                        return _jl_cell7();
                    }
                    // :
                    case 58: {
                        return _jl_cell3();
                    }
                    default:  {
                        return _jl_cell13();
                    }
                    }
                } else  {
                    if (_jl_char <= 64) {
                        switch (_jl_char) {
                        // ;
                        case 59: {
                            return _jl_cell2();
                        }
                        default:  {
                            return rewind();
                        }
                        }
                    } else  {
                        switch (_jl_char) {
                        // [\[-\^]
                        case 91:
                        case 92:
                        case 93:
                        case 94: {
                            return rewind();
                        }
                        default:  {
                            return _jl_cell11();
                        }
                        }
                    }
                }
            } else  {
                if (_jl_char <= 111) {
                    switch (_jl_char) {
                    // 0x0060
                    case 96: {
                        return rewind();
                    }
                    default:  {
                        return _jl_cell11();
                    }
                    }
                } else  {
                    if (_jl_char <= 122) {
                        switch (_jl_char) {
                        // p
                        case 112: {
                            return _jl_cell12();
                        }
                        default:  {
                            return _jl_cell11();
                        }
                        }
                    } else  {
                        switch (_jl_char) {
                        // EOF
                        case 65535: {
                            return _jl_cell1();
                        }
                        default:  {
                            return rewind();
                        }
                        }
                    }
                }
            }
        }
    }
    
    private int _jl_cell1() {
        return 13;
    }
    
    private int _jl_cell2() {
        return 12;
    }
    
    private int _jl_cell3() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // 0x003d
        case 61: {
            return _jl_cell19();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell4() {
        return 10;
    }
    
    private int _jl_cell5() {
        return 9;
    }
    
    private int _jl_cell6() {
        return 8;
    }
    
    private int _jl_cell7() {
        return 7;
    }
    
    private int _jl_cell8() {
        return 6;
    }
    
    private int _jl_cell9() {
        return 5;
    }
    
    private int _jl_cell10() {
        return 4;
    }
    
    private int _jl_cell11() {
        while (true) {
            mark(3);
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // [0-9 A-Z \_ a-z]
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 95:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122: {
                continue;
            }
            default:  {
                return rewind();
            }
            }
        }
    }
    
    private int _jl_cell12() {
        mark(3);
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0-9 A-Z \_ a-q s-z]
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 115:
        case 116:
        case 117:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122: {
            return _jl_cell11();
        }
        // r
        case 114: {
            return _jl_cell15();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell13() {
        while (true) {
            mark(1);
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // [0-9]
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57: {
                continue;
            }
            default:  {
                return rewind();
            }
            }
        }
    }
    
    private int _jl_cell14() {
        while (true) {
            mark(0);
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // [0x0008-0x000a 0x000d 0x0020]
            case 8:
            case 9:
            case 10:
            case 13:
            case 32: {
                continue;
            }
            default:  {
                return rewind();
            }
            }
        }
    }
    
    private int _jl_cell15() {
        mark(3);
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0-9 A-Z \_ a-h j-z]
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122: {
            return _jl_cell11();
        }
        // i
        case 105: {
            return _jl_cell16();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell16() {
        mark(3);
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0-9 A-Z \_ a-m o-z]
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122: {
            return _jl_cell11();
        }
        // n
        case 110: {
            return _jl_cell17();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell17() {
        mark(3);
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0-9 A-Z \_ a-s u-z]
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 117:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122: {
            return _jl_cell11();
        }
        // t
        case 116: {
            return _jl_cell18();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell18() {
        mark(2);
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0-9 A-Z \_ a-z]
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 95:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122: {
            return _jl_cell11();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell19() {
        return 11;
    }
    
     
    
}
