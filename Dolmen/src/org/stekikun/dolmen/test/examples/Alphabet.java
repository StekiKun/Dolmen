package org.stekikun.dolmen.test.examples;
import org.eclipse.jdt.annotation.Nullable;
import java.io.FileReader;
import java.io.BufferedReader;

/**
 * Lexer generated by Dolmen 1.0.0
 */
public final class Alphabet extends org.stekikun.dolmen.codegen.LexBuffer {
    
     
    
    /**
     * Returns a fresh lexer based on the given character stream
     * @param inputname
     * @param reader
     */
    public Alphabet(String inputname, java.io.Reader reader) {
        super(inputname, reader);
    }
    
    /**
     * Entry point for rule main
     */
    public  @Nullable String  main() {
        main:
        while (true) {
            // Initialize lexer for this automaton
            memory = _jl_mem_main;
            java.util.Arrays.fill(memory, -1);
            startToken();
            int result = _jl_cell0();
            endToken();
            switch (result) {
            case 0:  {
                 return getLexeme(); 
            }
            case 1:  {
                final String filename = getSubLexeme(memory[0], memory[1]);
                
		BufferedReader reader;
		try { reader = new BufferedReader(new FileReader(filename)); }
		catch (java.io.IOException e) {
			throw error("Cannot include file " + filename + ": " + e.getMessage());
		}
		pushInput(filename, reader);
		continue main;
	
            }
            case 2:  {
                final String filename = getSubLexeme(memory[0], memory[1]);
                
		BufferedReader reader;
		try { reader = new BufferedReader(new FileReader(filename)); }
		catch (java.io.IOException e) {
			throw error("Cannot switch to file " + filename + ": " + e.getMessage());
		}
		changeInput(filename, reader);
		continue main;
	
            }
            case 3:  {
                
		if (hasMoreInput()) {
			popInput(); continue main;
		}
		else
			return null;
	
            }
            default:
                break main;
            }
        }
        throw error("Empty token");
    }
    private final int [] _jl_mem_main = new int[8];
    
    private int _jl_cell0() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // #
        case 35: {
            return _jl_cell2();
        }
        // [A-Z]
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90: {
            return _jl_cell3();
        }
        // EOF
        case 65535: {
            return _jl_cell1();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell1() {
        return 3;
    }
    
    private int _jl_cell2() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // i
        case 105: {
            return _jl_cell6();
        }
        // s
        case 115: {
            return _jl_cell7();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell3() {
        while (true) {
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // 0x000a
            case 10: {
                return _jl_cell5();
            }
            // 0x000d
            case 13: {
                return _jl_cell4();
            }
            // [A-Z]
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90: {
                continue;
            }
            default:  {
                return rewind();
            }
            }
        }
    }
    
    private int _jl_cell4() {
        mark(0);
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // 0x000a
        case 10: {
            return _jl_cell5();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell5() {
        return 0;
    }
    
    private int _jl_cell6() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // n
        case 110: {
            return _jl_cell19();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell7() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // w
        case 119: {
            return _jl_cell8();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell8() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // i
        case 105: {
            return _jl_cell9();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell9() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // t
        case 116: {
            return _jl_cell10();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell10() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // c
        case 99: {
            return _jl_cell11();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell11() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // h
        case 104: {
            return _jl_cell12();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell12() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // t
        case 116: {
            return _jl_cell13();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell13() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // o
        case 111: {
            memory[2] = curPos;
            return _jl_cell14();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell14() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0x000a 0x000d EOF]
        case 10:
        case 13:
        case 65535: {
            return rewind();
        }
        // 0x0020
        case 32: {
            memory[3] = curPos;
            memory[4] = curPos;
            return _jl_cell16();
        }
        default:  {
            memory[3] = curPos;
            return _jl_cell15();
        }
        }
    }
    
    private int _jl_cell15() {
        while (true) {
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // 0x000a
            case 10: {
                return _jl_cell18();
            }
            // 0x000d
            case 13: {
                return _jl_cell17();
            }
            // EOF
            case 65535: {
                return rewind();
            }
            default:  {
                memory[3] = curPos;
                continue;
            }
            }
        }
    }
    
    private int _jl_cell16() {
        while (true) {
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // 0x000a
            case 10: {
                return _jl_cell18();
            }
            // 0x000d
            case 13: {
                return _jl_cell17();
            }
            // 0x0020
            case 32: {
                memory[3] = curPos;
                memory[4] = curPos;
                memory[2] = memory[4];
                continue;
            }
            // EOF
            case 65535: {
                return rewind();
            }
            default:  {
                memory[3] = curPos;
                memory[2] = memory[4];
                return _jl_cell15();
            }
            }
        }
    }
    
    private int _jl_cell17() {
        mark(2);
        memory[0] = memory[2];
        memory[1] = memory[3];
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // 0x000a
        case 10: {
            return _jl_cell18();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell18() {
        memory[0] = memory[2];
        memory[1] = memory[3];
        return 2;
    }
    
    private int _jl_cell19() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // c
        case 99: {
            return _jl_cell20();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell20() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // l
        case 108: {
            return _jl_cell21();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell21() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // u
        case 117: {
            return _jl_cell22();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell22() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // d
        case 100: {
            return _jl_cell23();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell23() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // e
        case 101: {
            memory[5] = curPos;
            return _jl_cell24();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell24() {
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // [0x000a 0x000d EOF]
        case 10:
        case 13:
        case 65535: {
            return rewind();
        }
        // 0x0020
        case 32: {
            memory[6] = curPos;
            memory[7] = curPos;
            return _jl_cell26();
        }
        default:  {
            memory[6] = curPos;
            return _jl_cell25();
        }
        }
    }
    
    private int _jl_cell25() {
        while (true) {
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // 0x000a
            case 10: {
                return _jl_cell28();
            }
            // 0x000d
            case 13: {
                return _jl_cell27();
            }
            // EOF
            case 65535: {
                return rewind();
            }
            default:  {
                memory[6] = curPos;
                continue;
            }
            }
        }
    }
    
    private int _jl_cell26() {
        while (true) {
            final char _jl_char = getNextChar();
            switch (_jl_char) {
            // 0x000a
            case 10: {
                return _jl_cell28();
            }
            // 0x000d
            case 13: {
                return _jl_cell27();
            }
            // 0x0020
            case 32: {
                memory[6] = curPos;
                memory[7] = curPos;
                memory[5] = memory[7];
                continue;
            }
            // EOF
            case 65535: {
                return rewind();
            }
            default:  {
                memory[6] = curPos;
                memory[5] = memory[7];
                return _jl_cell25();
            }
            }
        }
    }
    
    private int _jl_cell27() {
        mark(1);
        memory[0] = memory[5];
        memory[1] = memory[6];
        final char _jl_char = getNextChar();
        switch (_jl_char) {
        // 0x000a
        case 10: {
            return _jl_cell28();
        }
        default:  {
            return rewind();
        }
        }
    }
    
    private int _jl_cell28() {
        memory[0] = memory[5];
        memory[1] = memory[6];
        return 1;
    }
    
     
    
}
