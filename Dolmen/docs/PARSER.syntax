== GRAMMAR DESCRIPTION SYNTAX ==

# Lexical conventions

Same lexical conventions as LEXER.syntax
Moreover, tokens begin with an uppercase
letter whereas grammar rules begin with
a lowercase letter (_ is neither uppercase
nor lowercase).

# Syntax

## A grammar definition (.jy) [PARSER]

OPTION*	    // Configuration options
IMPORT*		// Java imports
TOKEN_DECL+ // Token declarations
{ JAVA }	// Java header
RULE+		// Grammar rules
{ JAVA } 	// Java footer

## Options [OPTION]
[ IDENT = STRING ]	// Key = value

## Imports [IMPORT]

Exactly like in Java

## Token declarations [TOKEN_DECL]

token { JAVA }? ALL_UP_IDENT

## Grammar rules [RULE]

VIS { JAVA } rule LIDENT ARGS? = PRODUCTION+ SEMICOL

## Visibility [VIS]

Exactly like in Java

## Entry arguments [ARGS]

| ( JAVA )				// Entry args prototype
|						// no args

## Grammar productions [PRODUCTION]

  | ITEM* continue?
  
## Production items [ITEM]

| (IDENT =)? IDENT ARGS?	// Term or non-term, possibly bound
| { JAVA }					// Action item